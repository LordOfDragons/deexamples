/* 
 * Drag[en]gine Library Scripts -- Game Engine
 *
 * Copyright (C) 2020, PlÃ¼ss Roland (roland@rptd.dnsalias.net)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


pin Dragengine.Gui.Events
pin Dragengine.Gui.Borders
pin Dragengine.Gui.Layouts
pin Dragengine.Scenery
pin Dragengine.Utils
pin Dragengine.Gui
pin Dragengine.Gui.Layouts
pin Dragengine.Gui.Layouts
pin Dragengine.Gui



/**
 * \brief DragonScript test project scrollbars window.
 */
class WindowScrollbars extends Window
	/** \brief Popup test action. */
	class ActionPopupTest extends DefaultActionListener
		class ActionPopdown extends DefaultActionListener
			private var WindowPopup pPopup
			
			public func new(WindowPopup popup)
				pPopup = popup
			end
			
			public func void onAction(ActionEvent event)
				pPopup.popdown()
			end
		end
		
		private var WindowScrollbars pWindow
		
		public func new(WindowScrollbars window)
			pWindow = window
		end
		
		public func void onAction(ActionEvent event)
			var Widget widget = event.getSource() cast Widget
			var WindowPopup window = WindowPopup.new()
			
			window.addWidget(Button.new("First Label", ActionPopdown.new(window)))
			window.addWidget(Button.new("Second Label", ActionPopdown.new(window)))
			window.addWidget(Button.new("Third Label >", ActionPopdown.new(window)))
			window.addWidget(Button.new("Last Label", ActionPopdown.new(window)))
			
			pWindow.getDesktop().addWindow(window)
			window.popup(widget.getDesktopPosition() + Point.new(0, widget.getHeight()))
		end
	end
	
	
	
	/** \brief Create game. */
	public func new() super(0, 0, 500, 450)
		runWhileBlockingLayout(block
			setDesignerSelector("WindowPadding")
			setLayout(BorderLayout.new())
			setTitle("Scrollbars")
			createContent(this)
		end)
	end
	
	
	
	/** \brief Add content. */
	private func void createContent(Container content)
		content.setLayout(BorderLayout.new(5))
		
		// test models
		var RangeModel modelScroll = DefaultRangeModel.new(0, 20, 5, 6, 1)
		var RangeModel modelScroll2 = DefaultRangeModel.new(0, 40, 10, 12, 1)
		var RangeModel modelProgress = DefaultRangeModel.new(0, 100, 20, 0, 1)
		var TextModel textModel = DefaultTextModel.new("Shared text")
		
		// right border
		content.addWidget(Panel.new(FlowLayout.new(LayoutAxis.x), block Panel p
			p.addWidget(ScrollBar.new(Orientation.vertical, modelScroll))
			p.addWidget(Slider.new(Orientation.vertical, modelScroll))
		end), BorderLayout.Area.right)
		
		// left border
		content.addWidget(Panel.new(FlowLayout.new(LayoutAxis.x), block Panel p
			p.addWidget(ScrollBar.new(Orientation.vertical, modelScroll))
		end), BorderLayout.Area.left)
		
		// bottom border
		content.addWidget(Panel.new(FlowLayout.new(LayoutAxis.y), block Panel p
			p.addWidget(ScrollBar.new(Orientation.horizontal, modelScroll2))
			p.addWidget(Slider.new(Orientation.horizontal, modelScroll2))
		end), BorderLayout.Area.bottom)
		
		// content
		content.addWidget(Panel.new(FlowLayout.new(LayoutAxis.y, 5), block Panel p
			var ScrollBar scrollbar = ScrollBar.new(Orientation.horizontal, modelProgress)
			scrollbar.setDesignerSelector("ScrollBar.RedBorder")
			p.addWidget(scrollbar)
			
			var ProgressBar progressBar = ProgressBar.new(Orientation.horizontal, modelProgress)
			progressBar.setDesignerSelector("ProgressBar.GreenBorder")
			p.addWidget(progressBar)
			
			var Panel frame = Panel.new()
			frame.setLayout(FlowLayout.new(LayoutAxis.x, 5))
			p.addWidget(frame)
			
			var TextField integerText = TextField.new("5")
			integerText.setDisplayCharCount(3)
			integerText.setDesignerSelector("TextField.BlueBorder")
			integerText.setValidator(SimpleTextValidator.new(3, SimpleTextValidator.CharacterClass.digits))
			frame.addWidget(integerText)
			
			frame.addWidget(SpinButton.new(modelProgress))
			
			p.addWidget(TextField.new(textModel))
			setActiveWidget(p.getWidget(p.getWidgetCount() - 1))
			
			p.addWidget(TextField.new(textModel))
			
			var Button button = Button.new("Popup Test", ActionPopupTest.new(this))
			button.setDesignerSelector("Button.VideoMouse")
			p.addWidget(button)
			
			var TextArea textArea = TextArea.new(textModel)
			textArea.setMaximalWidth(50)
			textArea.setRowCount(6)
			textArea.setDesignerSelector("TextArea.Yellowish")
			p.addWidget(ScrollPanel.new(textArea))
			
			p.addWidget(Panel.new(FlowLayout.new(LayoutAxis.x, 5), block Panel p2
				p2.addWidget(ProgressDial.new(modelScroll, "ProgressDial.Dial1"))
				p2.addWidget(ProgressDial.new(modelScroll, "ProgressDial.Dial2"))
			end))
		end), BorderLayout.Area.content)
	end
end
