/* 
 * Drag[en]gine Library Scripts -- Game Engine
 *
 * Copyright (C) 2020, Pl√ºss Roland ( roland@rptd.dnsalias.net )
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


pin Dragengine.Gui.Borders
pin Dragengine.Gui.Events
pin Dragengine.Gui.Layouts
pin Dragengine.Scenery
pin Dragengine.Utils
pin Dragengine.LoadSave



/**
 * \brief DragonScript test project edit module parameters window.
 */
class WindowEditModuleParameters extends Window
	/** \brief Create window. */
	public func new() super( 0, 0, 500, 400 )
		this.setDesignerSelector( "WindowPadding" )
		this.setTitle( "Edit Module Parameters" )
		
		this.runWhileBlockingLayout( block
			this.createContent( this )
		end )
	end
	
	/** \brief Dispose of window. */
	public func void dispose()
		this.pPanelEditModuleParameters = null
		super.dispose()
	end
	
	
	
	private var EditModuleParametersPanel pPanelEditModuleParameters
	
	
	
	/** \brief Create content. */
	private func void createContent( Container content )
		content.setLayout( BorderLayout.new( 5 ) )
		
		this.pPanelEditModuleParameters = EditModuleParametersPanel.new()
		this.addWidget( this.pPanelEditModuleParameters, BorderLayout.Area.content )
		
		this.addWidget( Panel.new( CentrizedBoxLayout.new( LayoutAxis.x, 20 ), block Panel panel
			panel.addWidget( Button.new( "Apply Changes", \
				EditModuleParametersPanel.ActionApplyChanges.new( this.pPanelEditModuleParameters ) ) )
			panel.addWidget( Button.new( "Reset Changes", \
				EditModuleParametersPanel.ActionResetChanges.new( this.pPanelEditModuleParameters ) ) )
			
			var CheckBox checkAdvanced = CheckBox.new( "Advanced" )
			checkAdvanced.getToggleModel().addListener( \
				EditModuleParametersPanel.ToggleAdvancedListener.new( this.pPanelEditModuleParameters ) )
			panel.addWidget( checkAdvanced )
		end ), BorderLayout.Area.bottom )
	end
end
