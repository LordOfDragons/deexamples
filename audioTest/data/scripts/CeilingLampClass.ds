pin Dragengine.Gui
pin Dragengine.Scenery
pin Dragengine.Utils


// Ceiling lamp.
class CeilingLampClass extends BehaviorElementClass
	public var ECBehaviorComponent component
	public var ECBehaviorCollider collider
	public var ECBehaviorDynamicSkin dynamicSkin
	public var ECBehaviorLight light
	public var ECBehaviorRenderableLight renderableLight
	
	
	// Create element class
	public func new() this("CeilingLamp")
	end
	
	public func new(String name) super(name)
		// Component behavior
		component = ECBehaviorComponent.new(this, null)
		component.setCommonPath("/model/prop", "ceilingLamp.demodel", \
			"/material/lamp/ceiling.deskin", "ceilingLamp.derig")
		
		// Collider behavior
		collider = ECBehaviorCollider.new(this, component)
		
		// Dynamic skin behavior to allow adjust the emissivitiy
		dynamicSkin = ECBehaviorDynamicSkin.new(this, component)
		
		// Light behavior
		light = ECBehaviorLight.new(this, collider, BaseGameApp.getApp().getTriggerTable())
		light.getLight().getAmbientRatio().setValue(0.25)
		light.getLight().getColor().setColor(Color.new(1, 0.95, 0.8))
		light.getAttach().getPosition().setVector(Vector.new(0, -0.15, 0))
		
		// Make component behavior not casting shadows by the light behavior.
		// With all other lights the component behavior will cast shadows.
		light.addShadowIgnoreComponent(component)
		
		// Alter the intensity of the assigned light texture to match up with light
		// activated state. Uses the light behavior to manipulate renderables in
		// a dynamic skin behavior.
		// 
		// The skin assigned to the componend has to use a texture named "light" and
		// the renderables named "intensity" and "color". Both renderables are optional.
		// 
		// The intensity scaling value of 4 is required due to physical reasons.
		// As a rule of thumb emissivity should be 4 times as bright as the light it emits.
		// 
		// The color scaling is an artistic choice using a darker version of the light
		// color as emissivity color
		renderableLight = ECBehaviorRenderableLight.new(this, dynamicSkin, light)
		renderableLight.getRenderableIntensity().setValue("intensity")
		renderableLight.getRenderableColor().setValue("color")
		renderableLight.getScaleIntensity().setValue(4)
		renderableLight.getScaleColor().setColor(Color.new(0.75, 0.75, 0.75))
	end
	
	// Create duplicate with new name. Required for XML subclassing.
	public func ElementClass duplicateNamed(String classname)
		return CeilingLampClass.new(classname)
	end
end
