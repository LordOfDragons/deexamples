namespace Example

pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * Player actor element.
 * 
 * This is the typical way to create your own player actor by extending BaseActor.
 * It is not required to create an own element class but it allows to retrieve and
 * store behavior instances so you do not have to look them up.
 */
public class PlayerActor extends BaseActor
	public var ECBehaviorLookAt.Instance lookAt
	public var ECBehaviorOccupier.Instance occupier
	
	
	/**
	 * Create element and store behaviors. Using instance() call is fast.
	 */
	public func new(PlayerActorClass eclass) super(eclass)
		lookAt = eclass.lookAt.instance(this)
		occupier = eclass.occupier.instance(this)
		
		// Init foot steps behavior. We use one for walking and one for running. For example purpose
		// the volumes are exagerated to make running heard better by the NPC than walking.
		var WeightedRandomList footStepSounds = WeightedRandomList.new()
		eclass.footStepSounds.forEach(block Sound each
			footStepSounds.add(each, 1)
		end )
		
		var ECBehaviorFootSteps.Configuration footStepsConfig
		
		footStepsConfig = ECBehaviorFootSteps.Configuration.new(PlayerActorClass.FOOTSTEPS_WALK)
		footStepsConfig.setInterval(0.6)
		footStepsConfig.addEvent(ECBehaviorFootSteps.Event.new(0.5, footStepSounds, 0.1, 20))
		getFootSteps().addConfiguration(footStepsConfig)
		
		footStepsConfig = ECBehaviorFootSteps.Configuration.new(PlayerActorClass.FOOTSTEPS_RUN)
		footStepsConfig.setInterval(0.4)
		footStepsConfig.addEvent(ECBehaviorFootSteps.Event.new(0.3, footStepSounds, 0.3, 40))
		getFootSteps().addConfiguration(footStepsConfig)
	end
end
